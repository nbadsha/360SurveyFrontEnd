[{"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\index.js":"1","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\reportWebVitals.js":"2","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\App.js":"3","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\HeaderComponent\\Header.js":"4","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\FooterComponent\\Footer.js":"5","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\MainLanding\\MainLanding.js":"6","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\SurveyComponents\\SurveyComponent.js":"7","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\UploadTraits\\UploadTraits.js":"8","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\ManageSurvey\\ManageSurvey.js":"9","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\UploadCandidates\\UploadCandidates.js":"10","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\TraitRating\\TraitRating.js":"11","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\APIs\\360SurveyApi.js":"12","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\SurveyReport\\SurveyReport.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1496,"mtime":1632465211656,"results":"17","hashOfConfig":"15"},{"size":3781,"mtime":1631627130482,"results":"18","hashOfConfig":"15"},{"size":399,"mtime":1631330145562,"results":"19","hashOfConfig":"15"},{"size":1758,"mtime":1631298814411,"results":"20","hashOfConfig":"15"},{"size":9986,"mtime":1632852271682,"results":"21","hashOfConfig":"15"},{"size":4591,"mtime":1632297405924,"results":"22","hashOfConfig":"15"},{"size":7671,"mtime":1633668084130,"results":"23","hashOfConfig":"15"},{"size":4908,"mtime":1632297305922,"results":"24","hashOfConfig":"15"},{"size":4826,"mtime":1632809672481,"results":"25","hashOfConfig":"15"},{"size":114,"mtime":1632303727202,"results":"26","hashOfConfig":"15"},{"size":5345,"mtime":1633660850003,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"18mirzj",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\index.js",[],["56","57"],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\App.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\HeaderComponent\\Header.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\FooterComponent\\Footer.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\MainLanding\\MainLanding.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\SurveyComponents\\SurveyComponent.js",["58","59"],"import React,{useState,useEffect, Component} from 'react'\r\nimport  TraitRating  from '../TraitRating/TraitRating'\r\nimport './SurveyComponent.css'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport api from '../../APIs/360SurveyApi'\r\n\r\n\r\n\r\nexport default class SurveyComponent extends Component {\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    this.continue = this.continue.bind(this)\r\n    this.inputChange = this.inputChange.bind(this)\r\n    this.getCandiDate = this.getCandiDate.bind(this)\r\n    this.addRatingsData = this.addRatingsData.bind(this)\r\n    this.submitSurvey = this.submitSurvey.bind(this)\r\n    this.setRespondent = this.setRespondent.bind(this)\r\n    this.isEligible = this.isEligible.bind(this)\r\n    this.thankYou = this.thankYou.bind(this)\r\n\r\n    this._selectRel = React.createRef()\r\n    \r\n    this.state = {\r\n                  step:0,\r\n                  isCompleted:false,\r\n                  res_name:\"\",\r\n                  res_emp_id:\"\",\r\n                  res_dept:\"\",\r\n                  res_relation:\"\",\r\n                  surveyRatings:[],\r\n                  traitDetails:[],\r\n                  candidate:{},\r\n                  respondent:{},\r\n                  inputDisabled:false,                  \r\n                  isNewRespondent:true\r\n                }  \r\n                         \r\n                \r\n    }\r\n\r\n  componentDidMount(){\r\n    this.loadSurveyTraits = this.loadSurveyTraits.bind(this)    \r\n    this.getCandiDate()\r\n  }\r\n\r\n  continue(){\r\n    let respondent = {\r\n      emp_id:this.state.res_emp_id,\r\n      emp_name:this.state.res_name,\r\n      department:this.state.res_dept,      \r\n    }    \r\n    api.post('findOrCreateRespondent',{\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      data : respondent\r\n    }).then((res)=>{      \r\n      this.setState({respondent:res.data[0],isNewRespondent:res.data[1]})      \r\n      this.isEligible()\r\n    })\r\n  }\r\n\r\n  isEligible(){\r\n    // console.log('iseligble')\r\n    \r\n    // console.log(this.state.isNewRespondent,this.state.respondent,this.state.candidate)\r\n    if (this.state.isNewRespondent===false){\r\n      api.get('isEligibleForSurvey',\r\n      {params:\r\n        {survey_id:this.state.candidate.survey_id,\r\n        respondent_id:this.state.respondent.id}})\r\n        .then((isEligible)=>{\r\n          // console.log('count',isEligible)\r\n          if (isEligible.data.count>0) {\r\n            this.setState({inputDisabled:false})\r\n            return(\r\n              new Swal({\r\n                title:'Not Eligible!',\r\n                text:'You already have responded to this survey.',\r\n                icon:'warning'\r\n              })\r\n            )\r\n          \r\n          }else{\r\n            api.get('getAllTraits').then((res)=>{      \r\n              this.setState({traitDetails:res.data})\r\n            })\r\n            this.setState({step:1})\r\n          }\r\n        })\r\n    }else{\r\n      api.get('getAllTraits').then((res)=>{      \r\n        this.setState({traitDetails:res.data})\r\n      })\r\n      this.setState({step:1})\r\n    }\r\n  }\r\n\r\n  getCandiDate(){\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const survey_link = params.get('survey_id');\r\n    api.get('getCandidateBySurveyLink',{params:{survey_link:survey_link}})\r\n    .then((res)=>{\r\n      console.log(res.data[0])\r\n      this.setState({candidate:res.data[0]})      \r\n    })\r\n    \r\n    \r\n  }\r\n  \r\n  addRatingsData(ratingData){\r\n      const ratingItems = [...this.state.surveyRatings]\r\n      // console.log('ratingItems',ratingItems)\r\n      // console.log('newRatings',ratingData)\r\n      let index = ratingItems.findIndex(function(item, i){\r\n          return item.traitId === ratingData.traitId\r\n      });\r\n      // console.log('duplicateFoundAt=',index)\r\n      if (index ===-1) {\r\n        // console.log('notFoundInserted',index)\r\n        ratingItems.push(ratingData)\r\n      }else{\r\n        console.log('FoundInserted',index)\r\n        ratingItems[index] = ratingData\r\n      }\r\n      // console.log('itemIndex',index)\r\n      // console.log('ratingItems',ratingItems)\r\n      this.setState({surveyRatings:ratingItems})\r\n  }\r\n  \r\n\r\n\r\n\r\n  loadSurveyTraits(){\r\n    // console.log('load',this.state.respondent)\r\n    return( this.state.traitDetails.map((trait) => {\r\n      return (\r\n        <TraitRating\r\n          traitData={trait}\r\n          key={trait.id}            \r\n          candidateId = {this.state.candidate.cand_id}\r\n          addRatingsData={this.addRatingsData}\r\n        />\r\n      );\r\n    }))\r\n  }\r\n\r\n  inputChange = input => e => {\r\n    // console.log(e,[input],e.target.value)\r\n    this.setState({\r\n        [input]: e.target.value\r\n    });\r\n    \r\n\r\n}\r\n\r\nsetRespondent(e){  \r\n  api.get('getRespondentByEmpId',{params:{emp_id:this.state.res_emp_id}})\r\n  .then((res)=>{\r\n    console.log(res.data.length,res.data)\r\n    if (res.data.length) {\r\n      this.setState({res_name:res.data[0].emp_name,res_dept:res.data[0].department,inputDisabled:true,selectFocus:true})\r\n      this._selectRel.current.focus()\r\n      this._selectRel.current.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"}) \r\n    }\r\n  })\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\nsubmitSurvey(){\r\n  console.log(this.state.candidate)\r\n  console.log(this.state.respondent)\r\n  console.log(this.state.surveyRatings)\r\n  console.log(this.state.res_relation)\r\n\r\n  api.post('submitSurvey',{\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    data : {\r\n      candidate:this.state.candidate,\r\n      respondent:this.state.respondent,\r\n      surveyRatings:this.state.surveyRatings,\r\n      rel_to_cand: this.state.res_relation\r\n    }\r\n  })\r\n  this.setState({isCompleted:true})\r\n  this.thankYou()\r\n}\r\n\r\nthankYou(){\r\n  return (\r\n    new Swal(\r\n      'Good job!',\r\n      'Your ratings will really help us to improve employee performance!',\r\n      'success')\r\n  )\r\n}\r\n\r\n  render() {\r\n    let formStyle = {\r\n      width:\"55%\",\r\n      padding:\"50px\"\r\n  } \r\n  let cand = this.state.candidate\r\n  \r\n        if (!this.state.isCompleted) {\r\n          return (\r\n            <div className=\"container form form-container\" style={formStyle}>\r\n            <div className=\"alert alert-primary trait-border-gradient\" role=\"alert\">\r\n              Collecting... survey data for <strong>{cand.cand_name}</strong>.\r\n            </div>\r\n            <h3>Respondent's Form</h3>\r\n            <hr />\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"empID\" className=\"form-label\">\r\n                Respondent's Employee ID\r\n                <span className=\"text text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control trait-border-gradient\"\r\n                id=\"empID\"\r\n                placeholder=\"Your Employee Id goes here...\"\r\n                onChange={this.inputChange(\"res_emp_id\")}\r\n                value = {this.state.res_emp_id}\r\n                onBlur={this.setRespondent}\r\n                disabled={this.state.inputDisabled}             \r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"empName\" className=\"form-label\">\r\n                Respondent's Name<span className=\"text text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control trait-border-gradient\"\r\n                id=\"empName\"\r\n                placeholder=\"Your name goes here...\"\r\n                onChange={this.inputChange(\"res_name\")}\r\n                value = {this.state.res_name}\r\n                // onFocus={this.setRespondent}\r\n                disabled={this.state.inputDisabled}             \r\n              />\r\n            </div>      \r\n\r\n      \r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dept\" className=\"form-label\">\r\n                Department<span className=\"text text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control trait-border-gradient\"\r\n                id=\"dept\"\r\n                placeholder=\"Type your department\"\r\n                onChange={this.inputChange(\"res_dept\")}\r\n                value = {this.state.res_dept}\r\n                // onFocus={this.setRespondent}\r\n                disabled={this.state.inputDisabled}\r\n              />\r\n            </div>\r\n      \r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"dept\" className=\"form-label\">\r\n                Relation with <strong className='text text-success'>{cand.cand_name}</strong><span className=\"text text-danger\">*</span>\r\n              </label>            \r\n              <select className=\"form-control trait-border-gradient\" onChange={this.inputChange(\"res_relation\")} value={this.state.res_relation} ref={this._selectRel}>\r\n                <option >Select...</option>\r\n                <option>Senior Engagement Manager</option>\r\n                <option>Senior Manager</option>\r\n                <option>Manager</option>              \r\n                <option>Colleague</option>             \r\n                <option>Self</option>             \r\n              </select>              \r\n            </div>\r\n\r\n\r\n            {\r\n              this.state.step===0?\r\n              \r\n              <div className=\"text-right my-3\">\r\n              <button className=\"btn btn-primary trait-border-gradient\" onClick={this.continue} >Continue</button>\r\n          </div>:\r\n          <>\r\n\r\n\r\n          <div className=\"alert alert-primary trait-border-gradient\" role=\"alert\">\r\n          <strong>{cand.cand_name}</strong> is working as {cand.job_role} in {cand.company_name}. Please Spare sometimes to rate on this traits.\r\n          </div>\r\n          <this.loadSurveyTraits/>\r\n          <button className=\"btn btn-primary text-right\" onClick={this.submitSurvey}>Submit</button>\r\n          </>\r\n            }\r\n  \r\n          </div>\r\n          )\r\n        }else{\r\n          return('')\r\n        }\r\n\r\n    \r\n        \r\n        \r\n    \r\n\r\n  }\r\n}\r\n\r\n\r\n","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\UploadTraits\\UploadTraits.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\ManageSurvey\\ManageSurvey.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\UploadCandidates\\UploadCandidates.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\TraitRating\\TraitRating.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\APIs\\360SurveyApi.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\SurveyReport\\SurveyReport.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":15,"nodeType":"66","messageId":"67","endLine":1,"endColumn":23},{"ruleId":"64","severity":1,"message":"68","line":1,"column":24,"nodeType":"66","messageId":"67","endLine":1,"endColumn":33},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]