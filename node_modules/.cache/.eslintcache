[{"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\index.js":"1","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\reportWebVitals.js":"2","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\App.js":"3","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\HeaderComponent\\Header.js":"4","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\FooterComponent\\Footer.js":"5","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\MainLanding\\MainLanding.js":"6","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\SurveyComponents\\SurveyComponent.js":"7","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\UploadTraits\\UploadTraits.js":"8","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\ManageSurvey\\ManageSurvey.js":"9","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\UploadCandidates\\UploadCandidates.js":"10","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\TraitRating\\TraitRating.js":"11","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\APIs\\360SurveyApi.js":"12","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\SurveyReport\\SurveyReport.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1496,"mtime":1632465211656,"results":"17","hashOfConfig":"15"},{"size":3781,"mtime":1631627130482,"results":"18","hashOfConfig":"15"},{"size":399,"mtime":1631330145562,"results":"19","hashOfConfig":"15"},{"size":1758,"mtime":1631298814411,"results":"20","hashOfConfig":"15"},{"size":7248,"mtime":1632554291095,"results":"21","hashOfConfig":"15"},{"size":4591,"mtime":1632297405924,"results":"22","hashOfConfig":"15"},{"size":4571,"mtime":1632317736995,"results":"23","hashOfConfig":"15"},{"size":4908,"mtime":1632297305922,"results":"24","hashOfConfig":"15"},{"size":4827,"mtime":1632451279792,"results":"25","hashOfConfig":"15"},{"size":114,"mtime":1632303727202,"results":"26","hashOfConfig":"15"},{"size":4824,"mtime":1632500494646,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"18mirzj",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\index.js",[],["57","58"],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\reportWebVitals.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\App.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\HeaderComponent\\Header.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\FooterComponent\\Footer.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\MainLanding\\MainLanding.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\SurveyComponents\\SurveyComponent.js",["59","60"],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\UploadTraits\\UploadTraits.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\ManageSurvey\\ManageSurvey.js",["61"],"import React, { Component } from 'react'\r\nimport './ManageSurvey.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from \"react-loader-spinner\";\r\nimport api from '../../APIs/360SurveyApi'\r\n\r\nexport default class ManageSurvey extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.createSurvey = this.createSurvey.bind(this)\r\n        \r\n        this.state = {\r\n            counter:0,\r\n            progressPercent:0,\r\n            loaderTypeCount:0,\r\n            btnDisable:'',\r\n            tableContent:[]\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.getSurveyData = this.getSurveyData.bind(this)\r\n      this.getSurveyData()\r\n    }\r\n    \r\n    createSurvey(){\r\n        api.get('createSurvey').then((res)=>{\r\n          console.log(res)\r\n          this.setState({tableContent:res.data,counter:1})\r\n        })\r\n    }\r\n\r\n    getSurveyData(){\r\n      api.get('getSurveyData').then((res)=>{\r\n        if (res.data.length>1) {\r\n          this.setState(\r\n            {\r\n              tableContent:res.data,              \r\n            }\r\n            )\r\n        }\r\n        \r\n      })\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"container form-container\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n              Upon clicking on below button a distinct survey link will be\r\n              automatically generated for each candidates.\r\n            </div>\r\n            <div className=\"col-md-12 text-center gradient-buttons\">\r\n              {/* <button type=\"button\" className=\"btn btn-primary\">\r\n                <i className='fas fa-cogs px-3'></i>\r\n                Start Survey Engine\r\n              </button> */}\r\n              {this.state.counter > 0 ? \r\n                <button className=\"dnldButton\">\r\n                <i className=\"fa fa-download\" aria-hidden=\"true\"></i> Export in Excel\r\n              </button>\r\n               : \r\n                \r\n                <button\r\n                className=\"button-42\"\r\n                onClick={() => {\r\n                  this.createSurvey();\r\n                }}\r\n                disabled={this.state.btnDisable}\r\n              >\r\n                <i className=\"fas fa-cogs\"></i> Start Survey Engine\r\n              </button>\r\n              }\r\n            </div>\r\n            {/* {this.state.counter > 0 ? <this.progressBar /> : \"\"} */}\r\n\r\n            <table className=\"table my-3\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" width=\"5%\">\r\n                    #\r\n                  </th>\r\n                  <th scope=\"col\" width=\"30%\">\r\n                    Candidate's Name\r\n                  </th>\r\n                  <th scope=\"col\" width=\"15%\">\r\n                    Job Role\r\n                  </th>\r\n                  <th scope=\"col\" width=\"25%\">\r\n                    Responses\r\n                  </th>\r\n                  <th scope=\"col\" width=\"25%\">\r\n                    Survey Link\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.tableContent.length === 0 ? (\r\n                  <tr>\r\n                  <th scope=\"row\" colSpan=\"5\" className=\"text-center\" >{'No-Data'}</th>    \r\n                </tr> \r\n                 ) :\r\n                 this.state.tableContent.map((e,i)=>\r\n                  <tr key={i}>\r\n                    <th scope=\"row\">{i+1}</th>\r\n                    <td>{e.cand_name}</td>\r\n                    <td>{e.job_role}</td>\r\n                    <td className='text-center'>{e.responses}</td>\r\n                    <td>\r\n                      <Link target={\"_blank\"}\r\n                      to={\"/collectSurvey?survey_id=\"+e.survey_link}\r\n                      >\r\n                        https://360survey.com/{e.survey_link}\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                 )\r\n                   \r\n                   }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// progressBar(){ \r\n//   let loaderType = [\r\n//     \"Audio\",\r\n//     \"Ball-Triangle\",\r\n//     \"Bars\",\r\n//     \"Circles\",\r\n//     \"Grid\",\r\n//     \"Hearts\",\r\n//     \"Oval\",\r\n//     \"Puff\",\r\n//     \"Rings\",\r\n//     \"TailSpin\",\r\n//     \"ThreeDots\",\r\n//   ];\r\n//   return(\r\n//       <div className='loader'>\r\n//       <Loader\r\n//       type={loaderType[2]}\r\n//       // visible='true'\r\n//       color=\"#0d6efd\"\r\n//       height={100}\r\n//       width={100}\r\n//       timeout={3000} //3 secs\r\n//     />\r\n//       </div>\r\n//   )\r\n      \r\n// }","C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\UploadCandidates\\UploadCandidates.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\TraitRating\\TraitRating.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\APIs\\360SurveyApi.js",[],"C:\\Users\\DollaR\\OneDrive\\Documents\\Survey Form\\360survey\\360surveyFrontEnd\\src\\AppComponents\\SurveyReport\\SurveyReport.js",["62","63","64","65"],"import React, { Component } from 'react'\r\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react'\r\nimport api from '../../APIs/360SurveyApi'\r\nimport './SurveyReport.css'\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\r\n\r\nconst camelcase = require('camelcase')\r\n\r\nexport default class SurveyReport extends Component {\r\n    constructor(){\r\n        super()\r\n        this.getAvgRatings = this.getAvgRatings.bind(this)\r\n        this.getTotalSurveyReport = this.getTotalSurveyReport.bind(this)  \r\n        this.onGridReady = this.onGridReady.bind(this)  \r\n        this.exportToCSV = this.exportToCSV.bind(this)  \r\n        this.state = {\r\n\r\n            tblType:0,\r\n            tableCols:[],\r\n            tableData:[],\r\n            gridAPI:[],\r\n            gridColAPI:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAvgRatings = this.getAvgRatings.bind(this)\r\n        this.getTotalSurveyReport = this.getTotalSurveyReport.bind(this)              \r\n    }\r\n\r\n    getAvgRatings(){\r\n        const tableCols = ['cand_name']\r\n        api.get('getAvgRatings').then((res)=>{\r\n            console.log('getAvgRatings',res.data)\r\n            // console.log(res.data[0])\r\n            // this.setState({avgRatingData:res.data})\r\n            const surveyData = res.data[0]\r\n\r\n            const traitNames = res.data[1]\r\n\r\n            const modTraitNames = []    \r\n                   \r\n            traitNames[0].map((trait)=>{                \r\n                modTraitNames.push(trait.trait_name)\r\n            })\r\n            \r\n            const newTableCols = tableCols.concat(modTraitNames)\r\n            \r\n            const tableHeader = []\r\n\r\n            newTableCols.map((col)=>{\r\n                let fieldData={\r\n                    headerName: camelcase(col,{pascalCase: true}), field: col, width: 150 \r\n                }\r\n                tableHeader.push(fieldData)\r\n            })\r\n\r\n            this.setState({tableCols:tableHeader,tableData:surveyData,tblType:2})\r\n        })        \r\n    }\r\n\r\n    getTotalSurveyReport(){\r\n        const tableCols = ['candidate','respondent','relation']        \r\n        api.get('getSurveyReport').then((res)=>{\r\n            // console.log('getTotalSurveyReport',res.data)\r\n            // this.setState({totalSurveyData:res.data})\r\n            const surveyData = res.data[0]\r\n\r\n            const traitNames = res.data[1]\r\n\r\n            const modTraitNames = []    \r\n                   \r\n            traitNames[0].map((trait)=>{                \r\n                modTraitNames.push(trait.trait_name)\r\n            })\r\n            \r\n            const newTableCols = tableCols.concat(modTraitNames)\r\n            \r\n            const tableHeader = []\r\n\r\n            newTableCols.map((col)=>{\r\n                let fieldData={\r\n                    headerName: camelcase(col,{pascalCase: true}), field: col, width: 250 \r\n                }\r\n                tableHeader.push(fieldData)\r\n            })\r\n\r\n            this.setState({tableCols:tableHeader,tableData:surveyData,tblType:1})\r\n        })\r\n    }\r\n\r\n    exportToCSV(){\r\n        if (this.state.tblType===1) {\r\n             this.state.gridAPI.exportDataAsCsv({fileName:'TotalSurveyData.csv'});\r\n        } else if(this.state.tblType===2) {\r\n            this.state.gridAPI.exportDataAsCsv({fileName:'AverageSurveyData.csv'});\r\n        }       \r\n    }\r\n\r\n    onGridReady(params){\r\n        this.setState({gridAPI:params.api, gridColAPI:params.columnApi})\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('tableCols',this.state.tableCols)\r\n        console.log('tableData',this.state.tableData)\r\n        return (\r\n            <div className='container ag-theme-alpine' style={{width:'100vh',height:'75vh',}}>\r\n                <div className='navbar  nvbg'>              \r\n                    \r\n                    <div className='wrapper'>\r\n                        <button className='btn btn-light mx-2 getReport' onClick={this.getTotalSurveyReport}><i class=\"far fa-list-alt\"></i> Total Survey Report</button>\r\n                        <button className='btn btn-light mx-2 getReport' onClick={this.getAvgRatings}><i class=\"fas fa-list\"></i> Average Survey Report</button>\r\n                        <button className='btn btn-light mx-2 getReport' onClick={this.exportToCSV}><i class=\"fas fa-download\"></i> Export to CSV</button>\r\n                    </div>                \r\n                    \r\n                </div>\r\n                <AgGridReact\r\n                columnDefs = {this.state.tableCols}\r\n                rowData = {this.state.tableData}\r\n                onGridReady={this.onGridReady}\r\n                >\r\n                <AgGridColumn field='count' headerName='#'></AgGridColumn>        \r\n\r\n\r\n                </AgGridReact>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":15,"nodeType":"72","messageId":"73","endLine":1,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":1,"column":24,"nodeType":"72","messageId":"73","endLine":1,"endColumn":33},{"ruleId":"70","severity":1,"message":"75","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":45,"column":38,"nodeType":"78","messageId":"79","endLine":45,"endColumn":40},{"ruleId":"76","severity":1,"message":"77","line":53,"column":35,"nodeType":"78","messageId":"79","endLine":53,"endColumn":37},{"ruleId":"76","severity":1,"message":"77","line":75,"column":38,"nodeType":"78","messageId":"79","endLine":75,"endColumn":40},{"ruleId":"76","severity":1,"message":"77","line":83,"column":35,"nodeType":"78","messageId":"79","endLine":83,"endColumn":37},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Loader' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]